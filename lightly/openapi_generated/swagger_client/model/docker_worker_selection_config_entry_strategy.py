# coding: utf-8

"""
    Lightly API

    Lightly.ai enables you to do self-supervised learning in an easy and intuitive way. The lightly.ai OpenAPI spec defines how one can interact with our REST API to unleash the full potential of lightly.ai  # noqa: E501

    The version of the OpenAPI document: 1.0.0
    Contact: support@lightly.ai
    Generated by: https://openapi-generator.tech
"""

import re  # noqa: F401
import sys  # noqa: F401
import typing  # noqa: F401

from frozendict import frozendict  # noqa: F401

import decimal  # noqa: F401
from datetime import date, datetime  # noqa: F401
from frozendict import frozendict  # noqa: F401

from lightly.openapi_generated.swagger_client.schemas import (  # noqa: F401
    AnyTypeSchema,
    ComposedSchema,
    DictSchema,
    ListSchema,
    StrSchema,
    IntSchema,
    Int32Schema,
    Int64Schema,
    Float32Schema,
    Float64Schema,
    NumberSchema,
    DateSchema,
    DateTimeSchema,
    DecimalSchema,
    BoolSchema,
    BinarySchema,
    NoneSchema,
    none_type,
    Configuration,
    Unset,
    unset,
    ComposedBase,
    ListBase,
    DictBase,
    NoneBase,
    StrBase,
    IntBase,
    Int32Base,
    Int64Base,
    Float32Base,
    Float64Base,
    NumberBase,
    DateBase,
    DateTimeBase,
    BoolBase,
    BinaryBase,
    Schema,
    _SchemaValidator,
    _SchemaTypeChecker,
    _SchemaEnumMaker
)


class DockerWorkerSelectionConfigEntryStrategy(
    DictSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """
    _required_property_names = set((
        'type',
    ))

    @classmethod
    @property
    def type(cls) -> typing.Type['DockerWorkerSelectionStrategyType']:
        return DockerWorkerSelectionStrategyType
    stopping_condition_minimum_distance = Float32Schema
    threshold = Float32Schema

    @classmethod
    @property
    def operation(cls) -> typing.Type['DockerWorkerSelectionStrategyThresholdOperation']:
        return DockerWorkerSelectionStrategyThresholdOperation
    target = DictSchema


    def __new__(
        cls,
        *args: typing.Union[dict, frozendict, ],
        type: type,
        stopping_condition_minimum_distance: typing.Union[stopping_condition_minimum_distance, Unset] = unset,
        threshold: typing.Union[threshold, Unset] = unset,
        operation: typing.Union['DockerWorkerSelectionStrategyThresholdOperation', Unset] = unset,
        target: typing.Union[target, Unset] = unset,
        _configuration: typing.Optional[Configuration] = None,
        **kwargs: typing.Type[Schema],
    ) -> 'DockerWorkerSelectionConfigEntryStrategy':
        return super().__new__(
            cls,
            *args,
            type=type,
            stopping_condition_minimum_distance=stopping_condition_minimum_distance,
            threshold=threshold,
            operation=operation,
            target=target,
            _configuration=_configuration,
            **kwargs,
        )

from lightly.openapi_generated.swagger_client.model.docker_worker_selection_strategy_threshold_operation import DockerWorkerSelectionStrategyThresholdOperation
from lightly.openapi_generated.swagger_client.model.docker_worker_selection_strategy_type import DockerWorkerSelectionStrategyType
