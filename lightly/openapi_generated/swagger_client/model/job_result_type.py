# coding: utf-8

"""
    Lightly API

    Lightly.ai enables you to do self-supervised learning in an easy and intuitive way. The lightly.ai OpenAPI spec defines how one can interact with our REST API to unleash the full potential of lightly.ai  # noqa: E501

    The version of the OpenAPI document: 1.0.0
    Contact: support@lightly.ai
    Generated by: https://openapi-generator.tech
"""

import re  # noqa: F401
import sys  # noqa: F401
import typing  # noqa: F401

from frozendict import frozendict  # noqa: F401

import decimal  # noqa: F401
from datetime import date, datetime  # noqa: F401
from frozendict import frozendict  # noqa: F401

from lightly.openapi_generated.swagger_client.schemas import (  # noqa: F401
    AnyTypeSchema,
    ComposedSchema,
    DictSchema,
    ListSchema,
    StrSchema,
    IntSchema,
    Int32Schema,
    Int64Schema,
    Float32Schema,
    Float64Schema,
    NumberSchema,
    DateSchema,
    DateTimeSchema,
    DecimalSchema,
    BoolSchema,
    BinarySchema,
    NoneSchema,
    none_type,
    Configuration,
    Unset,
    unset,
    ComposedBase,
    ListBase,
    DictBase,
    NoneBase,
    StrBase,
    IntBase,
    Int32Base,
    Int64Base,
    Float32Base,
    Float64Base,
    NumberBase,
    DateBase,
    DateTimeBase,
    BoolBase,
    BinaryBase,
    Schema,
    _SchemaValidator,
    _SchemaTypeChecker,
    _SchemaEnumMaker
)


class JobResultType(
    _SchemaEnumMaker(
        enum_value_to_name={
            "DATASET_PROCESSING": "DATASET_PROCESSING",
            "IMAGEMETA": "IMAGEMETA",
            "EMBEDDING": "EMBEDDING",
            "EMBEDDINGS2D": "EMBEDDINGS2D",
            "SAMPLING": "SAMPLING",
        }
    ),
    StrSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """
    
    @classmethod
    @property
    def DATASET_PROCESSING(cls):
        return cls._enum_by_value["DATASET_PROCESSING"]("DATASET_PROCESSING")
    
    @classmethod
    @property
    def IMAGEMETA(cls):
        return cls._enum_by_value["IMAGEMETA"]("IMAGEMETA")
    
    @classmethod
    @property
    def EMBEDDING(cls):
        return cls._enum_by_value["EMBEDDING"]("EMBEDDING")
    
    @classmethod
    @property
    def EMBEDDINGS2D(cls):
        return cls._enum_by_value["EMBEDDINGS2D"]("EMBEDDINGS2D")
    
    @classmethod
    @property
    def SAMPLING(cls):
        return cls._enum_by_value["SAMPLING"]("SAMPLING")
