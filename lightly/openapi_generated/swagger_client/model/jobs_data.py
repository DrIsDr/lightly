# coding: utf-8

"""
    Lightly API

    Lightly.ai enables you to do self-supervised learning in an easy and intuitive way. The lightly.ai OpenAPI spec defines how one can interact with our REST API to unleash the full potential of lightly.ai  # noqa: E501

    The version of the OpenAPI document: 1.0.0
    Contact: support@lightly.ai
    Generated by: https://openapi-generator.tech
"""

import re  # noqa: F401
import sys  # noqa: F401
import typing  # noqa: F401

from frozendict import frozendict  # noqa: F401

import decimal  # noqa: F401
from datetime import date, datetime  # noqa: F401
from frozendict import frozendict  # noqa: F401

from lightly.openapi_generated.swagger_client.schemas import (  # noqa: F401
    AnyTypeSchema,
    ComposedSchema,
    DictSchema,
    ListSchema,
    StrSchema,
    IntSchema,
    Int32Schema,
    Int64Schema,
    Float32Schema,
    Float64Schema,
    NumberSchema,
    DateSchema,
    DateTimeSchema,
    DecimalSchema,
    BoolSchema,
    BinarySchema,
    NoneSchema,
    none_type,
    Configuration,
    Unset,
    unset,
    ComposedBase,
    ListBase,
    DictBase,
    NoneBase,
    StrBase,
    IntBase,
    Int32Base,
    Int64Base,
    Float32Base,
    Float64Base,
    NumberBase,
    DateBase,
    DateTimeBase,
    BoolBase,
    BinaryBase,
    Schema,
    _SchemaValidator,
    _SchemaTypeChecker,
    _SchemaEnumMaker
)


class JobsData(
    DictSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """
    _required_property_names = set((
        'id',
        'jobId',
        'jobType',
        'status',
        'createdAt',
    ))

    @classmethod
    @property
    def id(cls) -> typing.Type['MongoObjectID']:
        return MongoObjectID
    jobId = StrSchema

    @classmethod
    @property
    def jobType(cls) -> typing.Type['JobResultType']:
        return JobResultType

    @classmethod
    @property
    def datasetId(cls) -> typing.Type['MongoObjectID']:
        return MongoObjectID

    @classmethod
    @property
    def status(cls) -> typing.Type['JobState']:
        return JobState

    @classmethod
    @property
    def finishedAt(cls) -> typing.Type['Timestamp']:
        return Timestamp

    @classmethod
    @property
    def createdAt(cls) -> typing.Type['Timestamp']:
        return Timestamp


    def __new__(
        cls,
        *args: typing.Union[dict, frozendict, ],
        id: id,
        jobId: jobId,
        jobType: jobType,
        status: status,
        createdAt: createdAt,
        datasetId: typing.Union['MongoObjectID', Unset] = unset,
        finishedAt: typing.Union['Timestamp', Unset] = unset,
        _configuration: typing.Optional[Configuration] = None,
        **kwargs: typing.Type[Schema],
    ) -> 'JobsData':
        return super().__new__(
            cls,
            *args,
            id=id,
            jobId=jobId,
            jobType=jobType,
            status=status,
            createdAt=createdAt,
            datasetId=datasetId,
            finishedAt=finishedAt,
            _configuration=_configuration,
            **kwargs,
        )

from lightly.openapi_generated.swagger_client.model.job_result_type import JobResultType
from lightly.openapi_generated.swagger_client.model.job_state import JobState
from lightly.openapi_generated.swagger_client.model.mongo_object_id import MongoObjectID
from lightly.openapi_generated.swagger_client.model.timestamp import Timestamp
