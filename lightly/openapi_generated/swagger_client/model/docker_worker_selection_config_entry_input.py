# coding: utf-8

"""
    Lightly API

    Lightly.ai enables you to do self-supervised learning in an easy and intuitive way. The lightly.ai OpenAPI spec defines how one can interact with our REST API to unleash the full potential of lightly.ai  # noqa: E501

    The version of the OpenAPI document: 1.0.0
    Contact: support@lightly.ai
    Generated by: https://openapi-generator.tech
"""

import re  # noqa: F401
import sys  # noqa: F401
import typing  # noqa: F401
import functools  # noqa: F401

from frozendict import frozendict  # noqa: F401

import decimal  # noqa: F401
from datetime import date, datetime  # noqa: F401
from frozendict import frozendict  # noqa: F401

from lightly.openapi_generated.swagger_client.schemas import (  # noqa: F401
    AnyTypeSchema,
    ComposedSchema,
    DictSchema,
    ListSchema,
    StrSchema,
    IntSchema,
    Int32Schema,
    Int64Schema,
    Float32Schema,
    Float64Schema,
    NumberSchema,
    UUIDSchema,
    DateSchema,
    DateTimeSchema,
    DecimalSchema,
    BoolSchema,
    BinarySchema,
    NoneSchema,
    none_type,
    Configuration,
    Unset,
    unset,
    ComposedBase,
    ListBase,
    DictBase,
    NoneBase,
    StrBase,
    IntBase,
    Int32Base,
    Int64Base,
    Float32Base,
    Float64Base,
    NumberBase,
    UUIDBase,
    DateBase,
    DateTimeBase,
    BoolBase,
    BinaryBase,
    Schema,
    _SchemaValidator,
    _SchemaTypeChecker,
    _SchemaEnumMaker
)


class DockerWorkerSelectionConfigEntryInput(
    DictSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """
    _required_property_names = set((
        'type',
    ))

    @classmethod
    @property
    def type(cls) -> typing.Type['DockerWorkerSelectionInputType']:
        return DockerWorkerSelectionInputType
    
    
    class task(
        _SchemaValidator(
            min_length=1,
        ),
        StrSchema
    ):
        pass

    @classmethod
    @property
    def score(cls) -> typing.Type['ActiveLearningScoreType']:
        return ActiveLearningScoreType
    
    
    class key(
        _SchemaValidator(
            min_length=1,
        ),
        StrSchema
    ):
        pass

    @classmethod
    @property
    def name(cls) -> typing.Type['DockerWorkerSelectionInputPredictionsName']:
        return DockerWorkerSelectionInputPredictionsName


    def __new__(
        cls,
        *args: typing.Union[dict, frozendict, ],
        type: type,
        task: typing.Union[task, Unset] = unset,
        score: typing.Union['ActiveLearningScoreType', Unset] = unset,
        key: typing.Union[key, Unset] = unset,
        name: typing.Union['DockerWorkerSelectionInputPredictionsName', Unset] = unset,
        _configuration: typing.Optional[Configuration] = None,
        **kwargs: typing.Type[Schema],
    ) -> 'DockerWorkerSelectionConfigEntryInput':
        return super().__new__(
            cls,
            *args,
            type=type,
            task=task,
            score=score,
            key=key,
            name=name,
            _configuration=_configuration,
            **kwargs,
        )

from lightly.openapi_generated.swagger_client.model.active_learning_score_type import ActiveLearningScoreType
from lightly.openapi_generated.swagger_client.model.docker_worker_selection_input_predictions_name import DockerWorkerSelectionInputPredictionsName
from lightly.openapi_generated.swagger_client.model.docker_worker_selection_input_type import DockerWorkerSelectionInputType
